<!DOCTYPE HTML>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title><%= params[:title] ? "File upload for #{params[:title]}" : 'File upload' %></title>
  <link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/themes/vader/jquery-ui.css" id="theme">
  <link rel="stylesheet" href="/stylesheets/application.css">
  <link rel="stylesheet" href="/stylesheets/jquery.fileupload.css">
  <link rel="stylesheet" href="/stylesheets/jquery.fileupload-ui.css">

  <noscript>
    <link rel="stylesheet" href="/stylesheets/jquery.fileupload-noscript.css">
  </noscript>
  <noscript>
    <link rel="stylesheet" href="/stylesheets/jquery.fileupload-ui-noscript.css">
  </noscript>
</head>
<body>
<div id="dropzone">Drop files here</div>

<% if params[:title] %>
  <h1><%= params[:title] %></h1>
<% end %>

<!-- The file upload form used as target for the file upload widget -->
<form id="fileupload" action="/upload" method="POST" enctype="multipart/form-data">
  <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
  <div class="fileupload-buttonbar">
    <div class="fileupload-buttons">
      <!-- The fileinput-button span is used to style the file input field as button -->
      <span class="fileinput-button">
        <span>Add files...</span>
        <input type="file" name="files[]" multiple>
      </span>
      <button type="submit" class="start">Start all uploads</button>
      <button type="reset" class="cancel">Cancel all uploads</button>
      <!--<button type="button" class="delete">Delete</button>-->
      <!--<input type="checkbox" class="toggle">-->
      <!-- The global file processing state -->
      <!--<span class="fileupload-process"></span>-->
    </div>
    <!-- The global progress state -->
    <div class="fileupload-progress">
      <!-- The global progress bar -->
      <div aria-valuenow="0" aria-valuemax="100" aria-valuemin="0" role="progressbar" class="progress ui-progressbar ui-widget ui-widget-content ui-corner-all">
        <div id="progressbar" style="width: 0" class="ui-progressbar-value ui-widget-header ui-corner-left"></div>
      </div>
    </div>
  </div>

  <!-- The table listing the files available for upload/download -->
  <table role="presentation" class="list-of-files">
    <thead>
    <tr>
      <th style="width:20%">Filename</th>
      <th style="width:10%">Size</th>
      <th>Status</th>
      <th style="width:20%">Action</th>
    </tr>
    </thead>
    <tbody class="files"></tbody>
  </table>
  <br />
  We accept the following files:
  <ul>
    <li>Images: Compress multiple JPG files as .zip files</li>
    <li>Videos: The following extensions are allowed: <%= (settings.accepted_file_types-['zip']).map {|v| ".#{v}"}.join(', ') %></li>
  </ul>
</form>

<!-- The template to display files available for upload -->
<script id="template-upload" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-upload fade">
        <td>
            <p class="name">{%=file.name%}</p>
            <strong class="error"></strong>
        </td>
        <td>
            <p class="size">Processing...</p>
        </td>
        <td>
            <div class="progress"></div>
        </td>
        <td>
            {% if (!i && !o.options.autoUpload) { %}
                <button class="start" disabled>Start</button>
            {% } %}
            {% if (!i) { %}
                <button class="cancel">Cancel</button>
            {% } %}
        </td>
    </tr>
{% } %}
</script>

<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-download fade" id="{%=file.id%}">
        <td>
            <p class="name">{%=file.name%}</p>
        </td>
        <td>
            <span class="size" title="{%=file.size%} Bytes">{%=o.formatFileSize(file.size)%}</span>
        </td>
        <td>
            <div class="progress">
            {% if (file.complete) { %}
              <span class="complete">upload complete</span>
            {% } else { %}
              <span class="incomplete">upload incomplete, please re-upload this file</span>
            {% } %}
            </div>
        </td>
        <td>
            {% if (file.error) { %}
                <div><span class="error">Error</span> {%=file.error%}</div>
            {% } %}
            {% if (!file.complete) { %}
                <button class="delete" data-type="DELETE" data-url="{%=file.delete_url%}">Delete</button>
            {% } %}
        </td>
    </tr>
{% } %}
</script>

<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.0/jquery-ui.min.js"></script>
<script src="/javascripts/jquery.md5.js"></script>
<!-- The Templates plugin is included to render the upload/download listings -->
<script src="/javascripts/tmpl.min.js"></script>
<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="/javascripts/jquery.iframe-transport.js"></script>
<!-- The basic File Upload plugin -->
<script src="/javascripts/jquery.fileupload.js"></script>
<!-- The File Upload processing plugin -->
<script src="/javascripts/jquery.fileupload-process.js"></script>
<!-- The File Upload validation plugin -->
<script src="/javascripts/jquery.fileupload-validate.js"></script>
<!-- The File Upload user interface plugin -->
<script src="/javascripts/jquery.fileupload-ui.js"></script>
<!-- The File Upload jQuery UI plugin -->
<script src="/javascripts/jquery.fileupload-jquery-ui.js"></script>
<script type="text/javascript">
  $(function () {
    'use strict';

    $('#fileupload').fileupload({
      formData: {id: <%= params[:id] %>, secret: '<%= params[:secret] %>'},
      maxChunkSize: 1024 * 1024, //1 megabyte
      acceptFileTypes: /(\.|\/)(<%= settings.accepted_file_types.join('|') %>)$/i,
      maxRetries: 100,
      retryTimeout: 500,
      sequentialUploads: true,
      dropZone: $('#dropzone'),

      add: function (e, data) {
        var that = this;
        $.getJSON('/upload', {
          file: data.files[0].name,
          id: <%= params[:id] %>,
          secret: '<%= params[:secret] %>'
        }, function (result) {
          var file = result.file;
          if (file.error) {
            alert(file.error);
          } else {
            data.uploadedBytes = file && file.size;
            var resumeable = $('#' + $.md5(file.name));
            if(resumeable) { resumeable.hide(); }
            $.blueimp.fileupload.prototype.options.add.call(that, e, data);
          }
        });
      },

      fail: function (e, data) {
        var fu = $(this).data('blueimp-fileupload') || $(this).data('fileupload'),
            retries = data.context.data('retries') || 0,
            retry = function () {
              $.getJSON('/upload', {
                file: data.files[0].name,
                id: <%= params[:id] %>,
                secret: '<%= params[:secret] %>'
              }).done(function (result) {
                var file = result.file;
                data.uploadedBytes = file && file.size;
                // clear the previous data:
                data.data = null;
                data.submit();
              }).fail(function () {
                fu._trigger('fail', e, data);
              });
            };

        if (data.errorThrown !== 'abort' && data.uploadedBytes < data.files[0].size && retries < fu.options.maxRetries) {
          retries += 1;
          data.context.data('retries', retries);
          window.setTimeout(retry, retries * fu.options.retryTimeout);
          return;
        }
        data.context.removeData('retries');
        $.blueimp.fileupload.prototype.options.fail.call(this, e, data);
      },

      progressall: function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        $('#progressbar').css('width', progress + '%');
      }
    });

    // Load existing files:
    $('#fileupload').addClass('fileupload-processing');
    $.ajax({
      url: '/list',
      data: {id: <%= params[:id] %>, secret: '<%= params[:secret] %>'},
      dataType: 'json',
      context: $('#fileupload')[0]
    }).always(function () {
      $(this).removeClass('fileupload-processing');
    }).done(function (result) {
      $(this).fileupload('option', 'done').call(this, $.Event('done'), {result: result});
    });
  });

//  $(document).bind('drop dragover', function (e) {
//    e.preventDefault();
//  });

  $(document).bind('dragover', function (e) {
    var dropZone = $('#dropzone'), timeout = window.dropZoneTimeout;
    if (timeout) {
      clearTimeout(timeout);
    } else {
      dropZone.addClass('in');
    }

    var found = false, node = e.target;
    do {
      if (node === dropZone[0]) {
        found = true;
        break;
      }
      node = node.parentNode;
    } while (node != null);

    if (found) {
      dropZone.addClass('hover');
    } else {
      dropZone.removeClass('hover');
    }

    window.dropZoneTimeout = setTimeout(function () {
      window.dropZoneTimeout = null;
      dropZone.removeClass('in hover');
    }, 1000);
  });
</script>

<!-- The XDomainRequest Transport is included for cross-domain file deletion for IE 8 and IE 9 -->
<!--[if (gte IE 8)&(lt IE 10)]>
<script src="/javascripts/cors/jquery.xdr-transport.js"></script>
<![endif]-->
</body>
</html>
